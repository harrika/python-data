[{"name": "test.test_integers_in_brackets.IntegersInBrackets.test_empty", "status": "passed", "message": "", "passed": true, "points": ["p02-01.1"], "backtrace": []}, {"name": "test.test_integers_in_brackets.IntegersInBrackets.test_first", "status": "failed", "message": "Lists differ: [12, 12] != [12, -43, 12]\n\nFirst differing element 1:\n12\n-43\n\nSecond list contains 1 additional elements.\nFirst extra element 2:\n12\n\n- [12, 12]\n+ [12, -43, 12]\n?      +++++\n : Incorrect result for string   afd [asd] [12 ] [a34]  [\t -43 ]tt [+12]xxx!", "passed": false, "points": ["p02-01.1"], "backtrace": ["  File \"/home2/anacondad3/lib/python3.7/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/home2/anacondad3/lib/python3.7/unittest/case.py\", line 628, in run\n    testMethod()\n", "  File \"/home2/tmc/hy-data-analysis-with-python-spring-2020/part02-e01_integers_in_brackets/test/test_integers_in_brackets.py\", line 21, in test_first\n    self.assertEqual(result, [12, -43, 12], msg=\"Incorrect result for string %s!\" % s)\n", "  File \"/home2/anacondad3/lib/python3.7/unittest/case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/home2/anacondad3/lib/python3.7/unittest/case.py\", line 1058, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n", "  File \"/home2/anacondad3/lib/python3.7/unittest/case.py\", line 1040, in assertSequenceEqual\n    self.fail(msg)\n", "  File \"/home2/anacondad3/lib/python3.7/unittest/case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_integers_in_brackets.IntegersInBrackets.test_second", "status": "passed", "message": "", "passed": true, "points": ["p02-01.1"], "backtrace": []}]